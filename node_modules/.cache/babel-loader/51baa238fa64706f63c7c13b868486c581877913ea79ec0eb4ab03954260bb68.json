{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\n\n// Load cart from sessionStorage\nconst loadCartFromStorage = () => {\n  try {\n    const serializedCart = sessionStorage.getItem('cart');\n    if (serializedCart === null) {\n      return [];\n    }\n    return JSON.parse(serializedCart);\n  } catch (err) {\n    return [];\n  }\n};\n\n// Save cart to sessionStorage\nconst saveCartToStorage = cart => {\n  try {\n    const serializedCart = JSON.stringify(cart);\n    sessionStorage.setItem('cart', serializedCart);\n  } catch (err) {\n    // Handle error silently\n  }\n};\nconst initialState = {\n  items: loadCartFromStorage(),\n  total: 0,\n  itemCount: 0\n};\nconst cartSlice = createSlice({\n  name: 'cart',\n  initialState,\n  reducers: {\n    addToCart: (state, action) => {\n      const product = action.payload;\n      const existingItem = state.items.find(item => item.id === product.id);\n      if (existingItem) {\n        existingItem.quantity += 1;\n      } else {\n        state.items.push({\n          ...product,\n          quantity: 1\n        });\n      }\n      cartSlice.caseReducers.calculateTotals(state);\n      saveCartToStorage(state.items);\n    },\n    removeFromCart: (state, action) => {\n      const productId = action.payload;\n      state.items = state.items.filter(item => item.id !== productId);\n      cartSlice.caseReducers.calculateTotals(state);\n      saveCartToStorage(state.items);\n    },\n    updateQuantity: (state, action) => {\n      const {\n        id,\n        quantity\n      } = action.payload;\n      const existingItem = state.items.find(item => item.id === id);\n      if (existingItem) {\n        existingItem.quantity = quantity;\n        if (existingItem.quantity <= 0) {\n          state.items = state.items.filter(item => item.id !== id);\n        }\n      }\n      cartSlice.caseReducers.calculateTotals(state);\n      saveCartToStorage(state.items);\n    },\n    clearCart: state => {\n      state.items = [];\n      state.total = 0;\n      state.itemCount = 0;\n      sessionStorage.removeItem('cart');\n    },\n    calculateTotals: state => {\n      state.itemCount = state.items.reduce((total, item) => total + item.quantity, 0);\n      state.total = state.items.reduce((total, item) => total + item.price * item.quantity, 0);\n    }\n  }\n});\n\n// Calculate totals on initial load\ncartSlice.caseReducers.calculateTotals(initialState);\nexport const {\n  addToCart,\n  removeFromCart,\n  updateQuantity,\n  clearCart,\n  calculateTotals\n} = cartSlice.actions;\nexport default cartSlice.reducer;","map":{"version":3,"names":["createSlice","loadCartFromStorage","serializedCart","sessionStorage","getItem","JSON","parse","err","saveCartToStorage","cart","stringify","setItem","initialState","items","total","itemCount","cartSlice","name","reducers","addToCart","state","action","product","payload","existingItem","find","item","id","quantity","push","caseReducers","calculateTotals","removeFromCart","productId","filter","updateQuantity","clearCart","removeItem","reduce","price","actions","reducer"],"sources":["C:/Users/customer/OneDrive/React Ecommerce/src/store/cartSlice.js"],"sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\r\n\r\n// Load cart from sessionStorage\r\nconst loadCartFromStorage = () => {\r\n  try {\r\n    const serializedCart = sessionStorage.getItem('cart');\r\n    if (serializedCart === null) {\r\n      return [];\r\n    }\r\n    return JSON.parse(serializedCart);\r\n  } catch (err) {\r\n    return [];\r\n  }\r\n};\r\n\r\n// Save cart to sessionStorage\r\nconst saveCartToStorage = (cart) => {\r\n  try {\r\n    const serializedCart = JSON.stringify(cart);\r\n    sessionStorage.setItem('cart', serializedCart);\r\n  } catch (err) {\r\n    // Handle error silently\r\n  }\r\n};\r\n\r\nconst initialState = {\r\n  items: loadCartFromStorage(),\r\n  total: 0,\r\n  itemCount: 0,\r\n};\r\n\r\nconst cartSlice = createSlice({\r\n  name: 'cart',\r\n  initialState,\r\n  reducers: {\r\n    addToCart: (state, action) => {\r\n      const product = action.payload;\r\n      const existingItem = state.items.find(item => item.id === product.id);\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity += 1;\r\n      } else {\r\n        state.items.push({ ...product, quantity: 1 });\r\n      }\r\n      \r\n      cartSlice.caseReducers.calculateTotals(state);\r\n      saveCartToStorage(state.items);\r\n    },\r\n    removeFromCart: (state, action) => {\r\n      const productId = action.payload;\r\n      state.items = state.items.filter(item => item.id !== productId);\r\n      \r\n      cartSlice.caseReducers.calculateTotals(state);\r\n      saveCartToStorage(state.items);\r\n    },\r\n    updateQuantity: (state, action) => {\r\n      const { id, quantity } = action.payload;\r\n      const existingItem = state.items.find(item => item.id === id);\r\n      \r\n      if (existingItem) {\r\n        existingItem.quantity = quantity;\r\n        if (existingItem.quantity <= 0) {\r\n          state.items = state.items.filter(item => item.id !== id);\r\n        }\r\n      }\r\n      \r\n      cartSlice.caseReducers.calculateTotals(state);\r\n      saveCartToStorage(state.items);\r\n    },\r\n    clearCart: (state) => {\r\n      state.items = [];\r\n      state.total = 0;\r\n      state.itemCount = 0;\r\n      sessionStorage.removeItem('cart');\r\n    },\r\n    calculateTotals: (state) => {\r\n      state.itemCount = state.items.reduce((total, item) => total + item.quantity, 0);\r\n      state.total = state.items.reduce((total, item) => total + (item.price * item.quantity), 0);\r\n    },\r\n  },\r\n});\r\n\r\n// Calculate totals on initial load\r\ncartSlice.caseReducers.calculateTotals(initialState);\r\n\r\nexport const { addToCart, removeFromCart, updateQuantity, clearCart, calculateTotals } = cartSlice.actions;\r\nexport default cartSlice.reducer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}